# Как пользоваться git?
## Что такое git?
*Git* - это распределённая система управления версиями. Проект был создан Линусом Торвальдсом для управления разработкой ядра Linux, первая версия выпущена 7 апреля 2005 года. 
## Что такое **Markdown**?
*Markdown* - Облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.
## Виды разметки
* **Полужирный** - обособление двумя звёздочками по бокам(без пробелов)
* *Курсив* - обособляется одной звёздочкой с двух сторон(без пробелов)
* * Звёздочка с пробелом - создание списка по точкам
* 1. Список с нумирацией - цифра + точка + пробел
## Команды для git
1. **git init** - создать пустой репозиторий Git или вновь инициализировать существующий можно параметром init. При инициализации он создаст скрытую папку. В ней содержатся все объекты и ссылки, которые Git использует и создаёт в истории работы над проектом.
2. **git status** - просмотреть статус нужного репозитория можно по ключевому слову status: его действие распространяется на подготовленные, неподготовленные и неотслеживаемые файлы.
3. **git add** - добавить отдельный файл в область подготовленных файлов можно параметром add с указанием имени файла. 
4. **git commit -a -m** - при создании коммита в репозитории можно добавить однострочное сообщение с помощью параметра commit с флагом -m. Само сообщение вводится непосредственно после флага, в кавычках.
5. **git log** - просматривать изменения, внесённые в репозиторий, можно с помощью параметра log. Он отображает список последних коммитов в порядке выполнения. 
6. **git checkout master** - возращение в актуальное состояние файла.
7. **git checkout (номер комита или первые 4 символа)** - возвращение к какой-то из версии файлов.
8. **git diff** - можно просматривать список изменений, внесённых в репозиторий, используя параметр diff. По умолчанию отображаются только изменения, не подготовленные для фиксации.
